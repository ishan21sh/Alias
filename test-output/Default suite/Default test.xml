<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Ishan_Work" failures="0" tests="1" name="Default test" time="20.902" errors="0" timestamp="2024-11-25T20:32:58 IST">
  <testcase classname="com.qa.alias.base.TestBase" name="@BeforeTest openTheAppliaction" time="20.829">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: &amp;apos;ISHAN_WORK&amp;apos;, ip: &amp;apos;192.168.31.233&amp;apos;
Build info: version: &amp;apos;4.17.0&amp;apos;, revision: &amp;apos;e52b1be057*&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;23&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {app: C:\Users\ishan\eclipse-work..., appActivity: com.onesell.android.main.Ma..., appPackage: org.alias, autoGrantPermissions: true, automationName: UiAutomator2, deviceName: OnePlus, noReset: false, platformName: ANDROID}, capabilities=[{appium:app=C:\Users\ishan\eclipse-workspace\Alias\src\test\resource\config\org_alias_v1.36.1.apk.support.apk, appium:appActivity=com.onesell.android.main.MainActivity, appium:appPackage=org.alias, appium:autoGrantPermissions=true, appium:automationName=UiAutomator2, appium:deviceName=OnePlus, appium:noReset=false, platformName=ANDROID}]}]
Capabilities {app: C:\Users\ishan\eclipse-work..., appActivity: com.onesell.android.main.Ma..., appPackage: org.alias, autoGrantPermissions: true, automationName: UiAutomator2, deviceName: OnePlus, noReset: false, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'ISHAN_WORK', ip: '192.168.31.233'
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {app: C:\Users\ishan\eclipse-work..., appActivity: com.onesell.android.main.Ma..., appPackage: org.alias, autoGrantPermissions: true, automationName: UiAutomator2, deviceName: OnePlus, noReset: false, platformName: ANDROID}, capabilities=[{appium:app=C:\Users\ishan\eclipse-workspace\Alias\src\test\resource\config\org_alias_v1.36.1.apk.support.apk, appium:appActivity=com.onesell.android.main.MainActivity, appium:appPackage=org.alias, appium:autoGrantPermissions=true, appium:automationName=UiAutomator2, appium:deviceName=OnePlus, appium:noReset=false, platformName=ANDROID}]}]
Capabilities {app: C:\Users\ishan\eclipse-work..., appActivity: com.onesell.android.main.Ma..., appPackage: org.alias, autoGrantPermissions: true, automationName: UiAutomator2, deviceName: OnePlus, noReset: false, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:139)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:162)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at com.qa.alias.factory.SeleniumFactory.openApkFileAppPackageAndActivity(SeleniumFactory.java:117)
at com.qa.alias.base.TestBase.openTheAppliaction(TestBase.java:126)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:393)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:326)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:661)
at org.testng.TestRunner.beforeRun(TestRunner.java:650)
at org.testng.TestRunner.run(TestRunner.java:612)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeTest openTheAppliaction -->
  <testcase classname="com.qa.alias.base.TestBase" name="@AfterTest tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="com.qa.alias.tests.TC005_without_vpn_verify_user_is_able_to_add_number_of_products_to_PDP_details_to_excel_with_sell_data2" name="verifyUserIsAbleToAddPDPDetailsToExcel" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserIsAbleToAddPDPDetailsToExcel -->
</testsuite> <!-- Default test -->
